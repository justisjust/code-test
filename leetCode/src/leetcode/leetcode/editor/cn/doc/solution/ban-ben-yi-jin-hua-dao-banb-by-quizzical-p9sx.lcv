### 解题思路

此处撰写解题思路

### 代码

* java

```java
class Solution {
public List<List<Integer>> permuteUnique(int[] nums) {
        int len = nums.length;
        Set<List<Integer>> res = new HashSet<>();
        boolean[] rank = new boolean[len];
        Deque<Integer> deque = new ArrayDeque<>();
        dfs(res,deque,rank,nums,0);
        return new ArrayList<>(res);
    }

    private void dfs(Set<List<Integer>> res, Deque<Integer> deque, boolean[] rank,int[] nums, int index) {
        if (index == nums.length) {
            res.add(new ArrayList<>(deque));
        }
        for (int i = 0; i < nums.length; i++) {
            if (rank[i]) {
                continue;
            }
            deque.addFirst(nums[i]);
            rank[i] = true;
            dfs(res, deque, rank, nums, index+1);
            deque.removeFirst();
            rank[i] = false;
        }
    }
}
```

