* java

```java
class Solution {
    public int minPathSum(int[][] grid) {
      int m = grid.length;
      int n = grid[0].length;
      int[][] dp = new int[m][n];
     //先算出第一个
      dp[0][0] = grid[0][0];
    //遍历算出两条边
      for(int i=1;i<m;i++){
          dp[i][0] = dp[i-1][0]+grid[i][0];
      }
      for(int j=1;j<n;j++){
          dp[0][j] = dp[0][j-1]+grid[0][j];
      }
     //计算中间，从相邻的两个值里取出最小值再加上当前格的大小
      for(int i=1;i<m;i++){
          for(int j=1;j<n;j++){
     dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j])+grid[i][j];           
          }
      }
      return dp[m-1][n-1];//输出结果值
    }
}```
```

