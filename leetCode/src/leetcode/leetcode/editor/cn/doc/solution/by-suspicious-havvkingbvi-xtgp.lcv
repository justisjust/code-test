> Problem: [1. 两数之和](https://leetcode.cn/problems/two-sum/description/)

[TOC]

# 思路

> 使用哈希表,更高效

# 解题方法

> 定义一个哈希表 键:存放数组中对应下标的数值  值:存放下标

# 复杂度

- 时间复杂度: O(n)

> 添加时间复杂度, 示例： O(n)

- 空间复杂度: O(n)

> 添加空间复杂度, 示例： O(n)

# Code

* []

```Java

class Solution {
    public int[] twoSum(int[] nums, int target) {
        //定义一个HashMap表用于存放数组中的元素
        //其中 键用来存放数组下标对应的数值 ,值用来存放对应下标
        HashMap<Integer , Integer> hm = new HashMap<>();
        for(int i = 0; i < nums.length; i++){
            //判断哈希表中是否存在 对应 键等于所求值
            if(hm.containsKey(target - nums[i])){
                return new int[]{hm.get(target - nums[i]) , i};
            }
            //如果不存在,就将数组中对应的值和下标存入哈希表中
            hm.put(nums[i] , i);
        }
        return new int[0];

    }
}
```

