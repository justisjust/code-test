> Problem: [43. 字符串相乘](https://leetcode.cn/problems/multiply-strings/description/)

[TOC]

# 思路

> 字符串拆分 相加 乘

# 解题方法

> 描述你的解题方法

# 复杂度

- 时间复杂度:

> 添加时间复杂度, 示例： $O(n)$

- 空间复杂度:

> 添加空间复杂度, 示例： $O(n)$

# Code

* []

```Java

class Solution {
    public String multiply(String num1, String num2) {
        // 乘中有0出现的话, 直接返回0
        if(num1.equals("0") || num2.equals("0")) return "0";
        int m = num1.length(), n = num2.length();
        // 乘积的最大长度为 m + n
        int[] resArr = new int[m + n];
        for (int i = m - 1; i >= 0; i--) {
            int a = num1.charAt(i) - '0';
            for (int j = n - 1; j >= 0; j--) {
                int b = num2.charAt(j) - '0';
                resArr[i + j + 1] += a * b;
            }
        }

        for (int i = m + n - 1; i > 0; i--) {
            resArr[i - 1] += resArr[i] / 10;
            resArr[i] %= 10;
        }

        StringBuilder builder = new StringBuilder();
        int start = resArr[0] == 0 ? 1 : 0;
        while (start < m + n) {
            builder.append(resArr[start]);
            start++;
        }
        return builder.toString();
    }
}
```

