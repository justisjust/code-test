### 解题思路

此处撰写解题思路

### 代码

* java

```java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        // 变成环形链表，再根据k定位切断的位置
       if(head == null){
            return null;
        }
        int size = 1;
        // 这样curr就和head一样，且curr也能一直往后找到链表结尾
        ListNode curr = head;
        ListNode curr2 = head;
        while (curr.next != null) {
            curr = curr.next;
            size++;
        }
        // curr.next 指向head, 实现环形链表
        curr.next = head;

        k %= size;
        // 确定切割位置
        for (int i = 1; i < size - k; i++) {
            curr2 = curr2.next;
        }
        // 新的头，切割节点
        head = curr2.next;
        curr2.next = null;
        return head;

    }
}
```

